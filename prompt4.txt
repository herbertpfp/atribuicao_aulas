Projeto Django para Gerenciamento de Atribuição de Aulas

Estou desenvolvendo um projeto em Django para gerenciar a atribuição de aulas em um pequeno servidor, com o objetivo de tornar esse processo mais transparente, eficiente e acessível para professores e gestores. Este sistema deverá permitir que professores expressem suas preferências de atribuição de aulas e que os gestores conduzam o processo de maneira clara e ordenada. Além disso, todos os usuários poderão acompanhar o progresso em tempo real.
Regras e Funcionamento do Sistema

    Atribuição de Aulas:
        Cada escola possui um número variável de turmas. Uma "turma" representa uma sala de aula.
        Cada turma precisa de 8 professores, um para cada disciplina: Português, Matemática, Ciências, História, Geografia, Arte, Educação Física e Inglês.
        Professores podem lecionar em mais de uma escola.
        A ordem de atribuição é baseada na pontuação_docente. Professores mais bem classificados têm prioridade de escolha.

    Fluxo do Processo de Atribuição:
        Professores fazem login no sistema e selecionam, em uma página específica, as escolas e turmas de interesse.
        Durante o processo de atribuição, o gestor, em ordem de classificação, chama cada professor.
        Se as turmas selecionadas pelo professor ainda estiverem disponíveis, essas turmas são atribuídas ao professor pelo gestor.
        Caso contrário, o gestor escolhe manualmente outras turmas disponíveis.
        Turmas atribuídas são removidas do campo turmas_disponíveis e adicionadas ao campo turmas_atribuidas.

    Gestor:
        O gestor tem privilégios administrativos e pode atribuir qualquer turma de qualquer escola, independentemente da escolha do professor.
        Ao buscar um professor pelo CPF, o sistema sugere automaticamente as turmas selecionadas pelo professor, caso ainda estejam disponíveis.

    Interface em Tempo Real:
        Todos os professores podem acompanhar o processo de atribuição em uma página coletiva, que mostra:
            Escolas > Turmas > Disciplinas.
            O status de cada turma/disciplinas, indicando se está "disponível" ou "atribuída".
            O nome do professor atribuído e do gestor responsável pela atribuição.

Estrutura do Projeto

    Localização: /home/herbert/atribuicao_aulas/

    Banco de Dados: Alimentado a partir de duas planilhas CSV:
        aulas.csv: Contém informações das aulas disponíveis:
            escola: Nome da escola.
            endereço: Localização da escola.
            turma: Identificador da turma.
            período: Matutino ou Vespertino.
        professores.csv: Contém informações dos professores:
            nome: Nome completo.
            pontuação_docente: Pontuação de classificação.
            disciplina: Disciplina que leciona.
            cpf: Cadastro de Pessoa Física (também será o login do professor).
            celular: Número de contato.
            cargo: Pode ser apenas PEB ou PAEB.

    Regras para Criação de Usuários:
        Login: CPF do professor.
        Senha padrão: 123.
        Ao criar o usuário, as informações adicionais do professor são extraídas diretamente do professores.csv. O professor pode corrigir seus dados, se necessário.

Requisitos do Front-End

    Página do Professor (Individual):
        Permite que o professor:
            Selecione escolas e turmas de interesse.
            Consulte e edite suas informações pessoais (nome, disciplina, celular, etc.).

    Página Coletiva (Transparência):
        Disponível para todos os usuários logados.
        Mostra:
            Todas as escolas.
            Turmas de cada escola e suas respectivas disciplinas.
            Status das turmas ("disponível" ou "atribuída").
            Nome do professor atribuído e do gestor responsável.

    Página do Gestor:
        Permite que o gestor:
            Consulte a lista de professores e suas escolhas de turmas.
            Realize a atribuição manual de turmas, caso necessário.
            Gerencie e edite o status de qualquer turma/disciplina.

Requisitos Técnicos

    Código completo, com explicações detalhadas para cada arquivo.
        Exemplo: Adicionar na primeira linha do arquivo um comentário com o caminho do arquivo (/core/admin.py).
        Explicações passo a passo para facilitar a compreensão do projeto.

    Implementação de funcionalidades específicas, como:
        Autenticação de usuários baseada em CPF.
        Interface responsiva para acesso via celular ou computador.
        Atualizações em tempo real do status das turmas na página coletiva.

    Utilizar as bibliotecas do Django para:
        Criação do modelo de banco de dados a partir dos arquivos CSV.
        Implementação do sistema de autenticação e permissões (diferenciar "professores" e "gestores").
        Gerenciamento das relações entre "escolas", "turmas" e "professores".

    Manter boa estrutura e legibilidade no código para facilitar futuras manutenções ou melhorias.



